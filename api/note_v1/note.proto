syntax = "proto3";

package api.note_v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/impopov/note-server-api/pkg/note_v1";

service NoteServiceV1 {
  rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse){
    option (google.api.http) = {
      post: "/note/v1/create"
      body: "*"
    };
  }

  rpc GetNote (GetNoteRequest) returns (GetNoteResponse) {
    option (google.api.http) = {
      post: "/note/v1/get-note"
      body: "*"
    };
  }

  rpc GetListNote (Empty) returns (GetListNoteResponse) {
    option (google.api.http) = {
      get: "/note/v1/get-list-note"
    };
  }

  rpc UpdateNote (UpdateNoteRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/note/v1/update-note"
      body: "*"
    };
  }

  rpc DeleteNote (DeleteNoteRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/note/v1/delete-note"
      body: "*"
    };
  }

}

message Empty{}

message Note {
  int64 id = 1;
  string title = 2;
  string text = 3;
  string author = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateNoteRequest {
  string title = 1;
  string text = 2;
  string author = 3;
}

message CreateNoteResponse {
  int64 id = 1;
}

message GetNoteRequest {
  int64 id = 1 [(validate.rules).int64.gte = 1] ;
}

message GetNoteResponse {
  Note note = 1;
}

message GetListNoteResponse {
  repeated Note note = 1;
}

message UpdateNoteRequest {
  Note note = 1;
}

message DeleteNoteRequest {
  int64 id = 1;
}
